variables:
  TERRAFORM_WORKSPACE: development
  APPLICATION_VERSION: v1
cache: &global_cache
  key: "$CI_PROJECT_NAME"
  paths:
    - .terraform
  policy: pull-push

before_script:
  - export TF_IN_AUTOMATION=true
  - export TF_VAR_application_key=${APPLICATION_KEY}
  - export TF_VAR_application_secret=${APPLICATION_SECRET}
  - export TF_VAR_consumer_key=${CONSUMER_KEY}

stages:
  - tfBackend
  - tfplan
  - tfapply
  - containerization
  - lint
  - deploymentplan
  - deploymentapply
  - termination

TfRemotebackend:
  tags:
    - aws
  stage: tfBackend
  allow_failure: true
  image:
    name: hashicorp/terraform
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin :/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  script:
    # We could use -plugin-dir tf-plugins to minimize the terraform init time.
    - export AWS_DEFAULT_REGION=us-east-1
    - terraform -chdir=./infrastructure/tfbackend init
    - terraform -chdir=./infrastructure/tfbackend apply -auto-approve
  when: manual
  only:
    - develop

InfraProvisionerPlan:
  tags:
    - aws
  stage: tfplan
  image:
    name: hashicorp/terraform
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  script:
    - terraform -chdir=./infrastructure/k8s init
    - terraform -chdir=./infrastructure/k8s plan -input=false -out "infraPlanFile"

  only:
    - develop
  artifacts:
    paths:
      - "./infrastructure/k8s/infraPlanFile"
    expire_in: 2 hours

InfraProvisionerApply:
  tags:
    - aws
  stage: tfapply
  image:
    name: hashicorp/terraform
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  script:
    - terraform -chdir=./infrastructure/k8s init
    - terraform -chdir=./infrastructure/k8s apply -input=false "infraPlanFile"
  artifacts:
    paths:
      - kubeconfig*
    expire_in: 2 days
  needs:
    - job: "InfraProvisionerPlan"
      artifacts: true
  when: manual
  only:
    - develop

ApplicationImage:
  tags:
    - "aws"
  stage: containerization
  image: docker:19.03.12
  script:
    - docker login -u $REGISTRY_USERNAME -p $REGISTRY_PASSWORD
    - docker build -f application/Dockerfile -t nasri/upday-java:${APPLICATION_VERSION} .
    - docker push nasri/upday-java:${APPLICATION_VERSION}
  only:
    - develop
ChartLint:
  tags:
    - "aws"
  stage: containerization
  image:
    name: alpine/helm
    entrypoint: [""]
  script:
    - helm lint ./deployment/charts/upday
    - helm template ./deployment/charts/upday

  only:
    - develop
DeploymentPlan:
  tags:
    - aws
  stage: deploymentplan
  image:
    name: hashicorp/terraform
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  script:
    - terraform -chdir=./deployment/terraform init
    - terraform -chdir=./deployment/terraform plan -input=false -out "AppPlanFile"
  needs:
    - InfraProvisionerApply
  artifacts:
    paths:
      - "./deployment/terraform/AppPlanFile"
    expire_in: 2 hours
  only:
    - develop

DeploymentApply:
  tags:
    - "aws"
  stage: deploymentapply
  image:
    name: hashicorp/terraform
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

  script:
    - terraform -chdir=./deployment/terraform init
    - terraform -chdir=./deployment/terraform apply -input=false "AppPlanFile"

  when: manual
  only:
    - develop
  needs:
    - job: DeploymentPlan
      artifacts: true

AppTermination:
  tags:
    - "aws"
  stage: termination
  image:
    name: hashicorp/terraform
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

  script:
    - terraform -chdir=./deployment/terraform init
    - terraform -chdir=./deployment/terraform destroy -auto-approve

  when: manual
  only:
    - develop

InfraTermination:
  tags:
    - "aws"
  stage: termination
  image:
    name: hashicorp/terraform
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

  script:
    - terraform -chdir=./infrastructure/k8s init
    - terraform -chdir=./infrastructure/k8s destroy -auto-approve
  needs:
    - AppTermination

  when: manual
  only:
    - develop
